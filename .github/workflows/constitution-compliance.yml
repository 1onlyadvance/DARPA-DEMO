name: Constitution Compliance CI

# Constitution Reference: Phase 0, Task 0.2 - Validation Framework Setup
# Purpose: Automated validation gates for all code changes

on:
  push:
    branches: [ main, develop, 'phase-*', 'task-*' ]
  pull_request:
    branches: [ main, develop ]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  constitution-integrity:
    name: Verify Constitution Integrity
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check constitution SHA-256
        run: |
          EXPECTED="203fd558105bc8fe4ddcfcfe46b386d4227d5d706aa2dff6bc3cd388192b9e77"
          ACTUAL=$(sha256sum IMPLEMENTATION_CONSTITUTION.md | cut -d' ' -f1)

          if [ "$EXPECTED" != "$ACTUAL" ]; then
            echo "‚ùå CONSTITUTION INTEGRITY VIOLATION"
            echo "Expected: $EXPECTED"
            echo "Actual:   $ACTUAL"
            echo ""
            echo "Constitution has been modified without proper amendment process!"
            echo "See: IMPLEMENTATION_CONSTITUTION.md - Amendment Process"
            exit 1
          fi

          echo "‚úÖ Constitution integrity verified"

  forbidden-terms:
    name: Check for Forbidden Terms
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Scan for pseudoscience terminology
        run: |
          FORBIDDEN="sentient|sentience|conscious|consciousness|self-aware|awareness|emergent consciousness|quantum consciousness"

          # Search in source files only, case-insensitive
          if grep -rniE "$FORBIDDEN" src/ examples/ cuda/ 2>/dev/null; then
            echo "‚ùå FORBIDDEN TERMS DETECTED"
            echo "See: IMPLEMENTATION_CONSTITUTION.md - Forbidden Practices"
            exit 1
          fi

          echo "‚úÖ No forbidden terms found"

  validation-framework:
    name: Validation Framework Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build validation framework
        run: cargo build -p validation --release

      - name: Run validation framework tests
        run: cargo test -p validation --verbose

      - name: Verify validators are functional
        run: |
          echo "‚úÖ Validation framework compiles"
          echo "‚úÖ All validators functional"

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Check documentation
        run: cargo doc --no-deps --all-features
        env:
          RUSTDOCFLAGS: -D warnings

  build-main:
    name: Build Main Project
    runs-on: ubuntu-latest
    needs: [constitution-integrity, forbidden-terms, validation-framework]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build project
        run: cargo build --release

      - name: Run tests
        run: cargo test --all --verbose

  validation-gate:
    name: Final Validation Gate
    runs-on: ubuntu-latest
    needs: [constitution-integrity, forbidden-terms, validation-framework, code-quality, build-main]
    steps:
      - name: All gates passed
        run: |
          echo "‚úÖ Constitution integrity verified"
          echo "‚úÖ No forbidden terms detected"
          echo "‚úÖ Validation framework functional"
          echo "‚úÖ Code quality checks passed"
          echo "‚úÖ Build and tests passed"
          echo ""
          echo "üéâ VALIDATION GATE PASSED - Code is constitution-compliant"
